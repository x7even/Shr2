name: Release Build and Publish

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
      
    - name: Publish
      run: dotnet publish --configuration Release --no-build -o ./publish
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: ./publish
        
  docker:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: shr2
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          latest
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false # Change to true if you want to push to a registry
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Create GitHub Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./publish/Shr2.dll
        asset_name: Shr2.dll
        asset_content_type: application/octet-stream

# Uncomment the following section if you want to push to a container registry
# (e.g., Docker Hub, GitHub Container Registry, Azure Container Registry)
#
#  push-to-registry:
#    needs: docker
#    runs-on: ubuntu-latest
#    
#    steps:
#    - name: Login to Container Registry
#      uses: docker/login-action@v2
#      with:
#        registry: ghcr.io # or your registry URL
#        username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}
#        
#    - name: Build and push Docker image
#      uses: docker/build-push-action@v4
#      with:
#        context: .
#        push: true
#        tags: |
#          ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
#          ghcr.io/${{ github.repository }}:latest
